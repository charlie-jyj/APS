# 1 선택 정렬을 위한 슈도코드

바깥 반복문으로 0부터 N-2까지 순회햔다 (인덱스 N-1의 값은 마지막 정렬에서 자동으로 결정된다.)
안쪽 반복문은 바깥 반복문 + 1 부터 끝까지 순회하며 기본값인 arr[i] 과 비교하여 최댓값 인덱스를 갱신한다.
안쪽 반복문이 끝나면 최댓값이 i 위치에 놓여지도록 배열의 요소를 서로 교환한다.

def selection_sort(N, arr):
    for i in range(0, N-1, 1):
        max_index = i
        for j in range(i+1, N, 1):
            if arr[max_index] > arr[j]:
                max_index = j
        arr[i], arr[max_index] = arr[max_index], arr[i]


# 2 교환이 일어났을 때 배열의 모양

[1, 2, 6, 5, 9, 3, 7, 8, 4] 1, 5 교환
[1, 2, 3, 5, 9, 6, 7, 8, 4] 3, 6 교환
[1, 2, 3, 4, 9, 6, 7, 8, 5] 4, 5 교환
[1, 2, 3, 4, 5, 6, 7, 8, 9] 5, 9 교환

총 교환 횟수 : 4회

